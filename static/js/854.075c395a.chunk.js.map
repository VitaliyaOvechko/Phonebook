{"version":3,"file":"static/js/854.075c395a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Form/ContactsForm.styled.js","components/Form/ContactsForm.jsx","components/ListItem/ContactsListItem.styled.js","components/ListItem/ContactsListItem.jsx","components/List/ContactsList.styled.js","components/List/ContactsList.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilters = state => state.filters;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContact = createSelector(\n  [selectContacts, selectFilters],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","import styled from 'styled-components';\n\nexport const FilterLable = styled.label`\n  font-size: 18px;\n  font-weight: 700;\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 20px;\n  width: 40%;\n  height: 25px;\n  border-radius: 4px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filteredContact } from 'redux/contacts/filtersSlice';\nimport { selectFilters } from 'redux/contacts/selectors';\nimport { FilterInput, FilterLable } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const searchQuery = useSelector(selectFilters);\n\n  // const filterChange = e => {\n  //   dispatch(filteredContact(e.target.value.trim()));\n  // };\n\n  const filterChange = ({ target: { value } }) => {\n    dispatch(filteredContact(value));\n  };\n\n  return (\n    <FilterLable>\n      Find contacts by name\n      <FilterInput type=\"text\" value={searchQuery} onChange={filterChange} />\n    </FilterLable>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label`\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 700;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 5px;\n  margin-bottom: 20px;\n  width: 50%;\n  height: 25px;\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 20px;\n  padding: 10px 22px;\n  border-radius: 4px;\n  border: 1px solid black;\n  font-weight: 700;\n  font-size: 18px;\n  background-color: rgba(41, 39, 118, 56);\n  color: white;\n  cursor: pointer;\n  &:hover {\n    background-color: #bba9c0;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n    color: black;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { nanoid } from 'nanoid';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Button, Form, Input, Label } from './ContactsForm.styled';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n\n    // dispatch(addContact({ name, number, id: nanoid() }));\n\n    contacts.find(\n      contact =>\n        form.elements.name.value.toLowerCase() === contact.name.toLowerCase()\n    )\n      ? alert(`${form.elements.name.value} is already in contacts`)\n      : dispatch(addContact({ name, number, id: nanoid() }));\n\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = event => {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(event.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ItemText = styled.p`\n  margin: 0;\n  font-size: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { ItemText } from './ContactsListItem.styled';\n\nexport const ContactItem = ({ contact: { name, number } }) => {\n  return (\n    <ItemText>\n      {name}: {number}\n    </ItemText>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0 100px 10px 5px;\n  list-style: none;\n  padding: 0;\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  gap: 50px;\n`;\n\nexport const DeleteBtn = styled.button`\n  padding: 5px 20px;\n  border-radius: 5px;\n  font-weight: 600;\n  font-size: 14px;\n  background-color: solid;\n  border: 1px solid black;\n  color: black;\n  cursor: pointer;\n  &:hover {\n    background-color: #2a2878;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n    color: #dbe4ee;\n  }\n`;\n","import { ContactItem } from '../ListItem/ContactsListItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DeleteBtn, List, ListItem } from 'components/List/ContactsList.styled';\nimport { selectVisibleContact } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const useContacts = () => useSelector(selectVisibleContact);\n  const visibleContacts = useContacts();\n\n  return (\n    <List>\n      {visibleContacts.map(contact => (\n        <ListItem key={contact.id}>\n          <ContactItem contact={contact} />\n          <DeleteBtn onClick={() => dispatch(deleteContact(contact.id))}>\n            Delete\n          </DeleteBtn>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\nimport { selectError, selectLoading } from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\nimport ContactForm from 'components/Form/ContactsForm';\nimport { ContactList } from 'components/List/ContactsList';\n\n// import { ContactsTitle, PhonebookTitle, Wrapper } from './App.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && <p>Loading contacts...</p>}\n      {error && <p>{error}</p>}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFilters","filters","selectLoading","isLoading","selectError","error","selectVisibleContact","createSelector","filter","contact","name","toLowerCase","includes","FilterLable","styled","_templateObject","_taggedTemplateLiteral","FilterInput","_templateObject2","Filter","dispatch","useDispatch","searchQuery","useSelector","_jsxs","children","_jsx","type","value","onChange","_ref","target","filteredContact","Form","Label","Input","_templateObject3","Button","_templateObject4","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","handleChange","event","currentTarget","onSubmit","preventDefault","form","find","elements","alert","concat","addContact","id","nanoid","title","required","ItemText","ContactItem","_ref$contact","List","ListItem","DeleteBtn","ContactList","visibleContacts","map","onClick","deleteContact","Contacts","useEffect","fetchContacts"],"sourceRoot":""}